# Template with one example system. Also see sgm_system_spawner_sgm_systems_scripted_effects.txt for actual use.
sgm_spawn_system_effect = {
	switch = {
		trigger = has_global_flag
		sgm_spawn_system_hyperlane_no = {
			switch = {
				trigger = has_global_flag
				sgm_spawn_system_is_discovered_yes = {
					if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 0
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 0
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 1
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 2
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 2
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 3
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 3
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 4
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 4
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 5
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 5
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 6
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 6
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 7
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 7
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 8
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 8
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 9
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 9
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 10
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 10
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = no
					# 	}
					# }
					else = {
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 0
							IS_DISCOVERED = yes
							HYPERLANE = no
						}
					}
				}
				default = {
					if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 0
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 0
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 1
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 2
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 2
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 3
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 3
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 4
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 4
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 5
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 5
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 6
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 6
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 7
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 7
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 8
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 8
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 9
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 9
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = no
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 10
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 10
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = no
					# 	}
					# }
					else = {
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = no
							HYPERLANE = no
						}
					}
				}
			}
		}
		default = {
			switch = {
				trigger = has_global_flag
				sgm_spawn_system_is_discovered_yes = {
					if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 0
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 0
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 1
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 2
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 2
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 3
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 3
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 4
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 4
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 5
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 5
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 6
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 6
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 7
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 7
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 8
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 8
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 9
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 9
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 10
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 10
					# 		IS_DISCOVERED = yes
					# 		HYPERLANE = yes
					# 	}
					# }
					else = {
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = yes
							HYPERLANE = yes
						}
					}
				}
				default = {
					if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 0
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 0
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 1
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 2
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 2
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 3
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 3
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 4
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 4
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
					else_if = {
						limit = {
							check_variable = {
								which = sgm_var_jumps_spawn_system
								value = 5
							}
						}
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 5
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 6
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 6
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 7
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 7
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 8
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 8
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 9
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 9
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = yes
					# 	}
					# }
					# else_if = {
					# 	limit = {
					# 		check_variable = {
					# 			which = sgm_var_jumps_spawn_system
					# 			value = 10
					# 		}
					# 	}
					# 	sgm_var_distance_spawn_system_effect = {
					# 		JUMPS = 10
					# 		IS_DISCOVERED = no
					# 		HYPERLANE = yes
					# 	}
					# }
					else = {
						sgm_var_distance_spawn_system_effect = {
							JUMPS = 1
							IS_DISCOVERED = no
							HYPERLANE = yes
						}
					}
				}
			}
		}
	}
}

sgm_var_distance_spawn_system_effect = {
	if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 0
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 0
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 10
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 10
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 20
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 20
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 30
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 30
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 40
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 40
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 50
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 50
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 60
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 60
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 70
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 70
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 80
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 80
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 90
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 90
		}
	}

	else_if = {
		limit = {
			check_variable = {
				which = sgm_var_distance_spawn_system
				value = 100
			}
		}
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 100
		}
	}
	else = {
		sgm_initialiser_spawn_system_effect = {
			JUMPS = $JUMPS$
			IS_DISCOVERED = $IS_DISCOVERED$
			HYPERLANE = $HYPERLANE$
			DISTANCE = 10
		}
	}
}

sgm_initialiser_spawn_system_effect = {
	prev = {
		switch = {
			trigger = has_global_flag
			sgm_spawn_system_sgm_systems = {
				switch = {
					trigger = has_global_flag
					sgm_spawn_system_initializer_sgm_init_template_1 = {
						spawn_system = {
							min_jumps = $JUMPS$
							max_jumps = $JUMPS$
							min_distance = $DISTANCE$							# 0-100
							max_distance = $DISTANCE$							# 0-100
							initializer = sgm_init_template_1							# initializer key name
							hyperlane = $HYPERLANE$							# yes/no
							is_discovered = $IS_DISCOVERED$							# yes/no
							effect = {
								set_star_flag = sgm_spawn_system_initializer_sgm_init_template_1
								fire_on_action = {
									on_action = sgm_on_system_spawned
									scopes = {
										from = prev
									}
								}
							}
						}
					}
					default = {
					}
				}
			}
			sgm_spawn_system_ancient_relics_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_apocalypse_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_aquatics_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_central_crystal_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_crisis_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_custom_starting_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_distant_stars_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_empire_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_example = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_fallen_empire_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_federations_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_hostile_system_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_leviathans_system_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_marauder_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_megacorp_intializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_misc_system_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_nebula_test_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_prescripted_species_systems = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_sol_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_special_system_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_test_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			sgm_spawn_system_utopia_initializers = {
				switch = {
					trigger = has_global_flag
					default = {
					}
				}
			}
			default = {
				set_global_flag = debug
			}
		}
	}
}

spawn_chosen_cluster_effect = {
	inverted_switch = {
		trigger = has_global_flag
		spawned_position_1 = {								# position 1
			set_global_flag = spawned_position_1
			log = "Position1"
			no_scope = {
				spawn_system = {
					min_distance >= 520
					max_distance <= 540
					min_orientation_angle = 70
					max_orientation_angle = 90
					initializer = $system_init$
					hyperlane = no
				}
				last_created_system = {
					save_event_target_as = last_created_system
					random_system_planet = {
						save_event_target_as = last_created_system_planet
					}
					#log = "[This.GetName]"
					if = {
						limit = {
							NOT = { has_global_flag = spawning_empty_cluster }
						}
						event_target:global_event_country = {
							set_variable = {
								which = cluster_size
								value = $num_stars$
							}
						}
						root = {
							country_event = {
								id = sgm_system.3
								scopes = {
									from = event_target:last_created_system
									fromfrom = event_target:last_created_system_planet
								}
							}
						}
					}
					
					else = {
						set_spawn_system_batch = begin
						while = {
							count = $num_stars$
							spawn_system = {
								min_distance >= 20
								max_distance <= 50
								min_orientation_angle = 0
								max_orientation_angle = 360
								initializer = $system_init$
								hyperlane = $connections$
							}
						}
						set_spawn_system_batch = end
					}
				}
			}
		}
		spawned_position_2 = {								# position 2
			set_global_flag = spawned_position_2
			log = "Position2"
			no_scope = {
				spawn_system = {
					min_distance >= 520
					max_distance <= 540
					min_orientation_angle = 100
					max_orientation_angle = 120
					initializer = $system_init$
					hyperlane = no
				}
				last_created_system = {
					save_event_target_as = last_created_system
					random_system_planet = {
						save_event_target_as = last_created_system_planet
					}
					#log = "[This.GetName]"
					if = {
						limit = {
							NOT = { has_global_flag = spawning_empty_cluster }
						}
						event_target:global_event_country = {
							set_variable = {
								which = cluster_size
								value = $num_stars$
							}
						}
						root = {
							country_event = {
								id = sgm_system.3
								scopes = {
									from = event_target:last_created_system
									fromfrom = event_target:last_created_system_planet
								}
							}
						}
					}
					
					else = {
						set_spawn_system_batch = begin
						while = {
							count = $num_stars$
							spawn_system = {
								min_distance >= 20
								max_distance <= 50
								min_orientation_angle = 0
								max_orientation_angle = 360
								initializer = $system_init$
								hyperlane = $connections$
							}
						}
						set_spawn_system_batch = end
					}
				}
			}
		}		
	}		
}
