# call from planet scope
delete_point_of_interest = {
	if = {
		limit = {
			has_point_of_interest = { poi = gm_poi.1 }
		}
			root = { remove_point_of_interest = gm_poi.1 }
		}
	else_if = {
		limit = {
			has_point_of_interest = { poi = gm_poi.2 }
		}
		root = { remove_point_of_interest = gm_poi.2 }
		}
	else_if = {
		limit = {
			has_point_of_interest = { poi = gm_poi.3 }
		}
		root = { remove_point_of_interest = gm_poi.3 }
	}
}


set_point_of_interest = {
	root = {
		if = {
			limit = {
				NOT = { has_point_of_interest = { poi = gm_poi.1 } }  
			}
			create_point_of_interest = {
				id = gm_poi.1
				name = gm_poi
				desc = gm_poi_desc
				event_chain = gm_poi
				location = prev
			}
		}
		else_if = {
			limit = {
				NOT = { has_point_of_interest = { poi = gm_poi.2 } } 
			}
			create_point_of_interest = {
				id = gm_poi.2
				name = gm_poi
				desc = gm_poi_desc
				event_chain = gm_poi
				location = prev
			}
			break = yes
		}
		else_if = {
			limit = {
				NOT = { has_point_of_interest = { poi = gm_poi.3 } } 
			}
			create_point_of_interest = {
				id = gm_poi.3
				name = gm_poi
				desc = gm_poi_desc
				event_chain = gm_poi
				location = prev
			}
			break = yes
		}
	}	
}

sgm_begin_next_megastructure_stage = {
			# dyson sphere
			if = {
				limit = {
					is_megastructure_type = dyson_sphere_0
				}
				upgrade_megastructure_to = dyson_sphere_1
			}
			if = {
				limit = {
					is_megastructure_type = dyson_sphere_1
				}
				upgrade_megastructure_to = dyson_sphere_2
			}
			if = {
				limit = {
					is_megastructure_type = dyson_sphere_2
				}
				upgrade_megastructure_to = dyson_sphere_3
			}
			if = {
				limit = {
					is_megastructure_type = dyson_sphere_3
				}
				upgrade_megastructure_to = dyson_sphere_4
			}
			if = {
				limit = {
					is_megastructure_type = dyson_sphere_4
				}
				upgrade_megastructure_to = dyson_sphere_5
			}
			# spy orb
			if = {
				limit = {
					is_megastructure_type = spy_orb_0
				}
				upgrade_megastructure_to = spy_orb_1
			}
			if = {
				limit = {
					is_megastructure_type = spy_orb_1
				}
				upgrade_megastructure_to = spy_orb_2
			}
			if = {
				limit = {
					is_megastructure_type = spy_orb_2
				}
				upgrade_megastructure_to = spy_orb_3
			}
			if = {
				limit = {
					is_megastructure_type = spy_orb_3
				}
				upgrade_megastructure_to = spy_orb_4
			}
			if = {
				limit = {
					is_megastructure_type = spy_orb_4
				}
				upgrade_megastructure_to = spy_orb_5
			}
			if = {
				limit = {
					is_megastructure_type = spy_orb_ruined
				}
				upgrade_megastructure_to = spy_orb_restored
			}
			#think tank
			if = {
				limit = {
					is_megastructure_type = think_tank_0
				}
				upgrade_megastructure_to = think_tank_1
			}
			if = {
				limit = {
					is_megastructure_type = think_tank_1
				}
				upgrade_megastructure_to = think_tank_2
			}
			if = {
				limit = {
					is_megastructure_type = think_tank_2
				}
				upgrade_megastructure_to = think_tank_3
			}
			if = {
				limit = {
					is_megastructure_type = think_tank_3
				}
				upgrade_megastructure_to = think_tank_4
			}
			if = {
				limit = {
					is_megastructure_type = think_tank_ruined
				}
				upgrade_megastructure_to = think_tank_restored
			}
			# gateways
			if = {
				limit = {
					is_megastructure_type = gateway_0
				}
				upgrade_megastructure_to = gateway_final
			}
			if = {
				limit = {
					is_megastructure_type = gateway_ruined
				}
				upgrade_megastructure_to = gateway_restored
			}
			# matter decompressor
			if = {
				limit = {
					is_megastructure_type = matter_decompressor_0
				}
				upgrade_megastructure_to = matter_decompressor_1
			}
			if = {
				limit = {
					is_megastructure_type = matter_decompressor_1
				}
				upgrade_megastructure_to = matter_decompressor_2
			}
			if = {
				limit = {
					is_megastructure_type = matter_decompressor_2
				}
				upgrade_megastructure_to = matter_decompressor_3
			}
			if = {
				limit = {
					is_megastructure_type = matter_decompressor_3
				}
				upgrade_megastructure_to = matter_decompressor_4
			}
			if = {
				limit = {
					is_megastructure_type = matter_decompressor_ruined
				}
				upgrade_megastructure_to = matter_decompressor_restored
			}
			# strategic coordination center
			if = {
				limit = {
					is_megastructure_type = strategic_coordination_center_0
				}
				upgrade_megastructure_to = strategic_coordination_center_1
			}
			if = {
				limit = {
					is_megastructure_type = strategic_coordination_center_1
				}
				upgrade_megastructure_to = strategic_coordination_center_2
			}
			if = {
				limit = {
					is_megastructure_type = strategic_coordination_center_2
				}
				upgrade_megastructure_to = strategic_coordination_center_3
			}
			if = {
				limit = {
					is_megastructure_type = strategic_coordination_center_3
				}
				upgrade_megastructure_to = strategic_coordination_center_4
			}
			if = {
				limit = {
					is_megastructure_type = strategic_coordination_center_ruined
				}
				upgrade_megastructure_to = strategic_coordination_center_restored
			}
			# mega art installation
			if = {
				limit = {
					is_megastructure_type = mega_art_installation_0
				}
				upgrade_megastructure_to = mega_art_installation_1
			}
			if = {
				limit = {
					is_megastructure_type = mega_art_installation_1
				}
				upgrade_megastructure_to = mega_art_installation_2
			}
			if = {
				limit = {
					is_megastructure_type = mega_art_installation_2
				}
				upgrade_megastructure_to = mega_art_installation_3
			}
			if = {
				limit = {
					is_megastructure_type = mega_art_installation_3
				}
				upgrade_megastructure_to = mega_art_installation_4
			}
			if = {
				limit = {
					is_megastructure_type = mega_art_installation_ruined
				}
				upgrade_megastructure_to = mega_art_installation_restored
			}
			# interstellar assembly
			if = {
				limit = {
					is_megastructure_type = interstellar_assembly_0
				}
				upgrade_megastructure_to = interstellar_assembly_1
			}
			if = {
				limit = {
					is_megastructure_type = interstellar_assembly_1
				}
				upgrade_megastructure_to = interstellar_assembly_2
			}
			if = {
				limit = {
					is_megastructure_type = interstellar_assembly_2
				}
				upgrade_megastructure_to = interstellar_assembly_3
			}
			if = {
				limit = {
					is_megastructure_type = interstellar_assembly_3
				}
				upgrade_megastructure_to = interstellar_assembly_4
			}
			if = {
				limit = {
					is_megastructure_type = interstellar_assembly_ruined
				}
				upgrade_megastructure_to = interstellar_assembly_restored
			}
			# mega shipyard
			if = {
				limit = {
					is_megastructure_type = mega_shipyard_0
				}
				upgrade_megastructure_to = mega_shipyard_1
			}
			if = {
				limit = {
					is_megastructure_type = mega_shipyard_1
				}
				upgrade_megastructure_to = mega_shipyard_2
			}
			if = {
				limit = {
					is_megastructure_type = mega_shipyard_2
				}
				upgrade_megastructure_to = mega_shipyard_3
			}
			if = {
				limit = {
					is_megastructure_type = mega_shipyard_3
				}
				upgrade_megastructure_to = mega_shipyard_4
			}
			if = {
				limit = {
					is_megastructure_type = mega_shipyard_ruined
				}
				upgrade_megastructure_to = mega_shipyard_restored
			}
			#crisis sphere
			if = {
				limit = {
					is_megastructure_type = crisis_sphere_0
				}
				upgrade_megastructure_to = crisis_sphere_1
			}
			if = {
				limit = {
					is_megastructure_type = crisis_sphere_1
				}
				upgrade_megastructure_to = crisis_sphere_2
			}
			if = {
				limit = {
					is_megastructure_type = crisis_sphere_2
				}
				upgrade_megastructure_to = crisis_sphere_3
			}
			if = {
				limit = {
					is_megastructure_type = crisis_sphere_3
				}
				upgrade_megastructure_to = crisis_sphere_4
			}
}

sgm_teleport_fleet_effect = {
	switch = {
		trigger = has_global_flag
		sgm_teleport_fleet_single = {
			clear_orders = yes
			clear_fleet_actions = this
			set_location = event_target:$TARGET$
		}
		sgm_teleport_fleet_military = {
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = prevprevprev.owner
						}
						is_in_combat = no
						is_mobile = yes
						OR = {
							is_ship_class = shipclass_military
							fleet_power > 0
						}
					}
					clear_orders = yes
					clear_fleet_actions = this
					set_location = event_target:$TARGET$
				}
			}
		}
		sgm_teleport_fleet_civilian = {
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = prevprevprev.owner
						}
						is_in_combat = no
						is_mobile = yes
						OR = {
							is_ship_class = shipclass_colonizer
							is_ship_class = shipclass_constructor
							is_ship_class = shipclass_science_ship
						}
					}
					clear_orders = yes
					clear_fleet_actions = this
					set_location = event_target:$TARGET$
				}
			}
		}
		sgm_teleport_fleet_all = {
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = prevprevprev.owner
						}
						is_in_combat = no
						is_mobile = yes
					}
					clear_orders = yes
					clear_fleet_actions = this
					set_location = event_target:$TARGET$
				}
			}
		}
		sgm_teleport_fleet_100_radius = {
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = prevprevprev.owner
						}
						is_in_combat = no
						is_mobile = yes
						distance = {
							source = prevprev
							min_distance >= 0
							max_distance <= 100
							same_solar_system = yes
						}
					}
					clear_orders = yes
					clear_fleet_actions = this
					set_location = event_target:$TARGET$
				}
			}
		}
		default = {
			clear_orders = yes
			clear_fleet_actions = this
			set_location = event_target:$TARGET$
		}
	}
	sgm_teleport_fleet_effect_cleanup = yes
}

sgm_teleport_fleet_effect_cleanup = {
	remove_global_flag = sgm_teleport_fleet_single
	remove_global_flag = sgm_teleport_fleet_military
	remove_global_flag = sgm_teleport_fleet_civilian
	remove_global_flag = sgm_teleport_fleet_all
	remove_global_flag = sgm_teleport_fleet_100_radius
	clear_global_event_target = target_megastructure_solar_system
	clear_global_event_target = target_country_capital_scope_solar_system
	clear_global_event_target = target_country_capital_scope
	clear_global_event_target = target_country_capital_scope_random_planet
	clear_global_event_target = target_country_capital_scope_random_fleet
	clear_global_event_target = target_planet_solar_system
	clear_global_event_target = target_fleet_solar_system
	clear_global_event_target = target_system_primary_star
	clear_global_event_target = target_country
	clear_global_event_target = target_country
	clear_global_event_target = target_country
	clear_global_event_target = target_country			# Need to clear this one multiple times. I do not know why and do not want to know.
	clear_global_event_target = target_fleet
	clear_global_event_target = target_planet
	clear_global_event_target = target_megastructure
	clear_global_event_target = target_system
	clear_global_event_target = target_ambient_object
} 