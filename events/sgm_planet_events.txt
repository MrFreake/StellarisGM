namespace = sgm_planets
country_event = {
	# planet event menu
	id = sgm_planets.1
	is_triggered_only = yes
	title = sgm_planet_1_title
	desc = sgm_planet_1_desc
	picture = GFX_evt_city_planet
	trigger = {
		exists = from
		exists = root
		from = {
			is_scope_type = planet
		}
	}
	immediate = {
		if = {
			limit = {
				check_variable = {
					which = modifier_var
					value < 1
				}
			}
			set_variable = {
				which = modifier_var
				value = 1
			}
		}
	}
	option = {
		allow = {
			always = yes
		}
		NAME = add_mod_planet_modifier
		country_event = {
			id = sgm_planet_modifiers.1
			scopes = {
				from = from
				fromfrom = this
			}
		}
	}
	option = {
		allow = {
			always = yes
		}
		NAME = remove_mod_planet_modifier
		country_event = {
			id = sgm_planet_modifiers.2
			scopes = {
				from = from
				fromfrom = this
			}
		}
	}
	option = {
		allow = {
			from = {
				NOR = {
					is_point_of_interest = {
						id = gm_poi.1
						event_chain = gm_poi
						owner = root
					}
					is_point_of_interest = {
						id = gm_poi.2
						event_chain = gm_poi
						owner = root
					}
					is_point_of_interest = {
						id = gm_poi.3
						event_chain = gm_poi
						owner = root
					}
				}
			}
		}
		NAME = create_point_of_interest
		from = {
			set_point_of_interest = yes
		}
	}
	option = {
		allow = {
			from = {
				OR = {
					is_point_of_interest = {
						id = gm_poi.1
						event_chain = gm_poi
						owner = root
					}
					is_point_of_interest = {
						id = gm_poi.2
						event_chain = gm_poi
						owner = root
					}
					is_point_of_interest = {
						id = gm_poi.3
						event_chain = gm_poi
						owner = root
					}
				}
			}
		}
		NAME = remove_point_of_interest
		remove_point_of_interest = gm_poi.1
		remove_point_of_interest = gm_poi.2
		remove_point_of_interest = gm_poi.3
	}
	option = {
		NAME = set_owner_target_country
		allow = {
			exists = event_target:target_country
		}
		from = {
			set_owner = event_target:target_country
		}
	}
	option = {
		NAME = spawn_ww2_sol_III
		from = {
			change_pc = pc_continental
			set_planet_size = 18
			reroll_planet = yes
			create_species = {
				name = Human
				plural = Humans
				class = "HUM"
				portrait = "human"
				traits = {
					trait = "trait_adaptive"
					trait = "trait_nomadic"
					trait = "trait_wasteful"
				}
				homeworld = this
			}
			create_country = {
				name = random
				authority = random
				civics = {
					civic = civic_increasing_urbanization
					civic = civic_atmospheric_pollution
				}
				species = last_created_species
				ethos = {
					ethic = "ethic_materialist"
					ethic = "ethic_fanatic_militarist"
				}
				origin = "origin_enlightened"				# Should only be visible if they become spacefaring
				flag = {
					icon = {
						category = "human"
						file = "flag_human_7.dds"
					}
					background = {
						category = "backgrounds"
						file = "circle.dds"
					}
					colors = {
						"dark_blue"
						"red"
						"null"
						"null"
					}
				}
				day_zero_contact = no
				type = primitive
			}
			last_created_country = {
				set_graphical_culture = industrial_01
				set_country_flag = machine_age
				set_country_flag = humans_machine_age
				set_primitive_age = machine_age
			}
			set_owner = last_created_country
			create_primitive_blockers = yes
			while = {
				count = 24
				create_pop = {
					species = last_created_species
				}
			}
			add_building = building_primitive_farm
			add_building = building_primitive_factory
			add_building = building_primitive_mine
			add_building = building_primitive_power_plant
			add_building = building_primitive_capital
			add_building = building_urban_dwellings
			create_army = {
				name = "NAME_German_Wehrmacht"
				owner = last_created_country
				species = last_created_species
				type = "industrial_army"
			}
			create_army = {
				name = "NAME_Soviet_Red_Army"
				owner = last_created_country
				species = last_created_species
				type = "industrial_army"
			}
			create_army = {
				name = "NAME_US_Armed_Forces"
				owner = last_created_country
				species = last_created_species
				type = "industrial_army"
			}
			create_army = {
				name = "NAME_British_Armed_Forces"
				owner = last_created_country
				species = last_created_species
				type = "industrial_army"
			}
			create_army = {
				name = "NAME_Imperial_Japanese_Forces"
				owner = last_created_country
				species = last_created_species
				type = "industrial_army"
			}
			last_created_country = {
				capital_scope = {
					set_name = "NAME_Sol_III"
				}
			}
		}
	}
	option = {
		name = FINISH_CURRENT_STAGE_EFFECT
		allow = {
			from = {
				exists = archaeological_site
				exists = space_owner
				archaeological_site = {
					is_site_under_excavation = yes
					is_site_completed = no
				}
			}
		}
		from = {
			archaeological_site = {
				finish_current_stage = yes
			}
		}
	}
	option = {
		NAME = exit
	}
}

country_event = {
	# add districts menu
	id = sgm_planets.50
	is_triggered_only = yes
	title = sgm_planets_50_title
	desc = sgm_planets_50_desc
	#picture = GFX_evt_alien_city
	custom_gui = sgm_ScalarEventWindow
	diplomatic = yes
	picture_event_data = {
		portrait = root.owner_main_species
		room = enclave_curator_room
	}
	trigger = {
		#		exists = from
		#		exists = root
		from = {
			is_scope_type = planet
		}
	}
	immediate = {
		log = "sgm_planets.50 firing"
	}
	option = {
		# add city districts
		NAME = district_city
		allow = {
			from = {
				OR = {
					uses_district_set = standard
					uses_district_set = hive_world
					uses_district_set = machine_world
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				if = {
					limit = {
						from.owner = {
							is_regular_empire = yes
						}
					}
					add_district = district_city
				}
				if = {
					limit = {
						from.owner = {
							is_hive_empire = yes
						}
					}
					add_district = district_hive
				}
				if = {
					limit = {
						from.owner = {
							is_machine_empire = yes
						}
					}
					add_district = district_nexus
				}
			}
		}
	}
	option = {
		# add industrial districts
		NAME = district_industrial
		allow = {
			from = {
				uses_district_set = standard
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_industrial
			}
		}
	}
	option = {
		# add generator districts
		NAME = district_generator
		allow = {
			from = {
				OR = {
					uses_district_set = standard
					uses_district_set = hive_world
					uses_district_set = machine_world
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				if = {
					limit = {
						uses_district_set = hive_world
						uses_district_set = machine_world
					}
					add_district = district_generator_uncapped
				}
				else = {
					add_district = district_generator
				}
			}
		}
	}
	option = {
		# add mining districts
		NAME = district_mining
		allow = {
			from = {
				OR = {
					uses_district_set = standard
					uses_district_set = hive_world
					uses_district_set = machine_world
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				if = {
					limit = {
						uses_district_set = hive_world
						uses_district_set = machine_world
					}
					add_district = district_mining_uncapped
				}
				else = {
					add_district = district_mining
				}
			}
		}
	}
	option = {
		# add farming districts
		NAME = district_farming
		allow = {
			from = {
				OR = {
					uses_district_set = standard
					uses_district_set = hive_world
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				if = {
					limit = {
						uses_district_set = hive_world
					}
					add_district = district_farming_uncapped
				}
				else = {
					add_district = district_farming
				}
			}
		}
	}
	option = {
		# add district_arcology_housing 
		NAME = district_arcology_housing
		allow = {
			from = {
				uses_district_set = city_world
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_arcology_housing
			}
		}
	}
	option = {
		# add district_arcology_arms_industry  
		NAME = district_arcology_arms_industry
		allow = {
			from = {
				uses_district_set = city_world
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_arcology_arms_industry
			}
		}
	}
	option = {
		# add district_arcology_civilian_industry   
		NAME = district_arcology_civilian_industry
		allow = {
			from = {
				uses_district_set = city_world
				owner = {
					OR = {
						is_gestalt = no
						has_valid_civic = civic_machine_servitor
					}
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_arcology_civilian_industry
			}
		}
	}
	option = {
		# add district_arcology_leisure   
		NAME = district_arcology_leisure
		allow = {
			from = {
				uses_district_set = city_world
				owner = {
					is_regular_empire = yes
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_arcology_leisure
			}
		}
	}
	option = {
		# add district_hab_housing    
		NAME = district_hab_housing
		allow = {
			from = {
				uses_district_set = habitat
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_housing
			}
		}
	}
	option = {
		# add district_hab_energy     
		NAME = district_hab_energy
		allow = {
			from = {
				uses_district_set = habitat
				OR = {
					has_planet_flag = energy_habitat
					owner = {
						is_gestalt = yes
					}
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_energy
			}
		}
	}
	option = {
		# add district_hab_industrial     
		NAME = district_hab_industrial
		allow = {
			from = {
				uses_district_set = habitat
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_industrial
			}
		}
	}
	option = {
		# add district_hab_science     
		NAME = district_hab_science
		allow = {
			from = {
				uses_district_set = habitat
				has_planet_flag = research_habitat
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_science
			}
		}
	}
	option = {
		# add district_hab_commercial      
		NAME = district_hab_commercial
		allow = {
			from = {
				uses_district_set = habitat
				owner = {
					is_gestalt = no
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_commercial
			}
		}
	}
	option = {
		# add district_hab_mining      
		NAME = district_hab_mining
		allow = {
			from = {
				uses_district_set = habitat
				has_planet_flag = mining_habitat
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_mining
			}
		}
	}
	option = {
		# add district_hab_cultural       
		NAME = district_hab_cultural
		allow = {
			exists = owner
			from = {
				uses_district_set = habitat
				owner = {
					OR = {
						is_gestalt = no
						has_valid_civic = civic_machine_servitor
					}
				}
			}
		}
		while = {
			count = modifier_var
			from = {
				add_district = district_hab_cultural
			}
		}
	}
	option = {
		NAME = Exit
	}
}

country_event = {
	# change planet class menu
	id = sgm_planets.51
	is_triggered_only = yes
	title = sgm_planets_51_title
	desc = sgm_planets_51_desc
	picture = GFX_evt_gaia
	trigger = {
		from = {
			is_scope_type = planet
		}
	}
	immediate = {
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_gaia
		from = {
			change_pc = pc_gaia
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_city
		from = {
			change_pc = pc_city
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_relic
		from = {
			change_pc = pc_city
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_frozen
		from = {
			change_pc = pc_frozen
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_alpine
		from = {
			change_pc = pc_alpine
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_tundra
		from = {
			change_pc = pc_tundra
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_continental
		from = {
			change_pc = pc_continental
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_ocean
		from = {
			change_pc = pc_ocean
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_tropical
		from = {
			change_pc = pc_tropical
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_desert
		from = {
			change_pc = pc_desert
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_arid
		from = {
			change_pc = pc_arid
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = no
			}
		}
		NAME = pc_savannah
		from = {
			change_pc = pc_savannah
			reroll_planet = yes
			reroll_deposits = yes
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_b_star
		from = {
			change_pc = pc_b_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_a_star
		from = {
			change_pc = pc_a_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_f_star
		from = {
			change_pc = pc_f_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_g_star
		from = {
			change_pc = pc_g_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_k_star
		from = {
			change_pc = pc_k_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_m_star
		from = {
			change_pc = pc_m_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_m_giant_star
		from = {
			change_pc = pc_m_giant_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_t_star
		from = {
			change_pc = pc_t_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_black_hole
		from = {
			change_pc = pc_black_hole
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_neutron_star
		from = {
			change_pc = pc_neutron_star
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = pc_pulsar
		from = {
			change_pc = pc_pulsar
		}
	}
	option = {
		trigger = {
			from = {
				is_star = yes
			}
		}
		NAME = trigger_supernova
		from = {
			solar_system = {
				destroy_star_system = yes
			}
		}
	}
	option = {
		NAME = Exit
	}
}

country_event = {
	# spawn hostiles menu
	id = sgm_planets.52
	is_triggered_only = yes
	title = sgm_planets_52_title
	desc = sgm_planets_52_desc
	custom_gui = sgm_ScalarEventWindow
	diplomatic = yes
	picture_event_data = {
		portrait = root.owner_main_species
		room = enclave_curator_room
	}
	trigger = {
	}
	immediate = {
		log = "sgm_planets.52 scope: [This.GetName]"
	}
	option = {
		# large crystals
		NAME = sgm_large_crystals
		while = {
			count = modifier_var
			create_crystal_country = yes
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Sapphire_Lurkers"
					effect = {
						set_owner = event_target:crystal_country
						while = {
							count = 7
							create_ship = {
								name = ""
								design = "NAME_Large_Crystal_Entity_Blue"
							}
						}
						while = {
							count = 9
							create_ship = {
								name = ""
								design = "NAME_Medium_Crystal_Entity_Blue"
							}
						}
						while = {
							count = 20
							create_ship = {
								name = ""
								design = "NAME_Small_Crystal_Entity_Blue"
							}
						}
						set_location = {
							target = from
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
					}
				}
			}
		}
	}
	option = {
		# medium crystals
		NAME = sgm_med_crystals
		while = {
			count = modifier_var
			create_crystal_country = yes
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Sapphire_Lurkers"
					effect = {
						set_owner = event_target:crystal_country
						while = {
							count = 3
							create_ship = {
								name = ""
								design = "NAME_Large_Crystal_Entity_Green"
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Medium_Crystal_Entity_Green"
							}
						}
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Small_Crystal_Entity_Green"
							}
						}
						set_location = {
							target = from
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
					}
				}
			}
		}
	}
	option = {
		# small crystals
		NAME = sgm_small_crystals
		while = {
			count = modifier_var
			create_crystal_country = yes
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Sapphire_Lurkers"
					effect = {
						set_owner = event_target:crystal_country
						while = {
							count = 1
							create_ship = {
								name = ""
								design = "NAME_Large_Crystal_Entity_Red"
							}
						}
						while = {
							count = 2
							create_ship = {
								name = ""
								design = "NAME_Medium_Crystal_Entity_Red"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Small_Crystal_Entity_Red"
							}
						}
						set_location = {
							target = from
							distance = 5
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 150
					}
				}
			}
		}
	}
	option = {
		# crystals base
		NAME = sgm_base_crystals
		while = {
			count = modifier_var
			create_crystal_country = yes
			event_target:crystal_country = {
				create_fleet = {
					name = "NAME_Crystal_Nidus"
					effect = {
						set_owner = event_target:crystal_country
						create_ship = {
							name = "NAME_Crystal_Nidus"
							design = "NAME_Crystal_Nidus"
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						#set_fleet_stance = aggressive
						#set_aggro_range_measure_from = return_point
						#set_aggro_range = 500
					}
				}
			}
		}
	}
	option = {
		# sgm_large_ameobas
		NAME = sgm_large_ameobas
		while = {
			count = modifier_var
			create_amoeba_country = yes
			event_target:amoeba_country = {
				create_fleet = {
					name = "NAME_Space_Amoeba"
					settings = {
						garrison = yes
					}
					effect = {
						set_owner = event_target:amoeba_country
						while = {
							count = 20
							create_ship = {
								name = ""
								design = "NAME_Small_Space_Organism_Zebra"
							}
						}
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Large_Space_Organism_Zebra"
							}
						}
						set_formation_scale = 3
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
					}
				}
			}
		}
	}
	option = {
		# sgm_med_ameobas
		NAME = sgm_med_ameobas
		while = {
			count = modifier_var
			create_amoeba_country = yes
			event_target:amoeba_country = {
				create_fleet = {
					name = "NAME_Space_Amoeba"
					settings = {
						garrison = yes
					}
					effect = {
						set_owner = event_target:amoeba_country
						while = {
							count = 15
							create_ship = {
								name = ""
								design = "NAME_Small_Space_Organism_Zebra"
							}
						}
						while = {
							count = 5
							create_ship = {
								name = ""
								design = "NAME_Large_Space_Organism_Zebra"
							}
						}
						set_formation_scale = 3
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
					}
				}
			}
		}
	}
	option = {
		# sgm_small_ameobas
		NAME = sgm_small_ameobas
		while = {
			count = modifier_var
			create_amoeba_country = yes
			event_target:amoeba_country = {
				create_fleet = {
					name = "NAME_Space_Amoeba"
					settings = {
						garrison = yes
					}
					effect = {
						set_owner = event_target:amoeba_country
						while = {
							count = 10
							create_ship = {
								name = ""
								design = "NAME_Small_Space_Organism_Zebra"
							}
						}
						while = {
							count = 1
							create_ship = {
								name = ""
								design = "NAME_Large_Space_Organism_Zebra"
							}
						}
						set_formation_scale = 3
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 100
					}
				}
			}
		}
	}
	option = {
		# sgm_roamer_ameobas
		NAME = sgm_small_ameobas
		while = {
			count = modifier_var
			create_amoeba_country = yes
			save_event_target_as = grazing_grounds
			event_target:amoeba_country = {
				create_fleet = {
					name = "NAME_Space_Amoeba_Hunters"
					effect = {
						set_owner = event_target:amoeba_country
						random_list = {
							20 = {
								set_fleet_flag = tiyanki_hunter
							}
							70 = {
								set_fleet_flag = empty_system
							}
						}
						while = {
							count = 4
							create_ship = {
								name = ""
								design = "NAME_Small_Space_Organism_Orange"
							}
						}
						while = {
							count = 1
							create_ship = {
								name = ""
								design = "NAME_Large_Space_Organism_Orange"
							}
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 20
						if = {
							limit = {
								has_fleet_flag = tiyanki_hunter
							}
							save_event_target_as = hunting_amoeba
							queue_actions = {
								wait = {
									# Cooldown until they start moving
									duration = 5000
									random = 1000
								}
							}
						}
						else = {
							queue_actions = {
								wait = {
									# Cooldown until they start moving
									duration = 5000
									random = 1000
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		# sgm_mother_ameoba
		NAME = sgm_mother_ameoba
		while = {
			count = modifier_var
			create_amoeba_country = yes
			event_target:amoeba_country = {
				create_fleet = {
					name = "NAME_Space_Amoeba"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = event_target:amoeba_country
						create_ship = {
							name = "NAME_Ortus"
							design = "NAME_Great_Space_Organism"
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 50
					}
				}
			}
		}
	}
	option = {
		# sgm_large_tiyanki
		NAME = sgm_large_tiyanki
		while = {
			count = modifier_var
			create_tiyanki_country = yes
			event_target:tiyanki_garrison_country = {
				create_fleet = {
					name = "NAME_Tiyanki_Space_Whale"
					effect = {
						set_owner = event_target:tiyanki_garrison_country
						while = {
							count = 4
							create_ship = {
								design = "NAME_Tiyanki_Cow"
							}
						}
						while = {
							count = 10
							create_ship = {
								design = "NAME_Tiyanki_Bull"
							}
						}
						while = {
							count = 20
							create_ship = {
								design = "NAME_Tiyanki_Hatchling"
							}
						}
						while = {
							count = 5
							create_ship = {
								design = "NAME_Tiyanki_Calf"
							}
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = passive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 0
					}
				}
			}
		}
	}
	option = {
		# sgm_med_tiyanki
		NAME = sgm_med_tiyanki
		while = {
			count = modifier_var
			create_tiyanki_country = yes
			event_target:tiyanki_garrison_country = {
				create_fleet = {
					name = "NAME_Tiyanki_Space_Whale"
					effect = {
						set_owner = event_target:tiyanki_garrison_country
						while = {
							count = 2
							create_ship = {
								design = "NAME_Tiyanki_Cow"
							}
						}
						while = {
							count = 5
							create_ship = {
								design = "NAME_Tiyanki_Bull"
							}
						}
						while = {
							count = 15
							create_ship = {
								design = "NAME_Tiyanki_Hatchling"
							}
						}
						while = {
							count = 2
							create_ship = {
								design = "NAME_Tiyanki_Calf"
							}
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = passive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 0
					}
				}
			}
		}
	}
	option = {
		# sgm_small_tiyanki
		NAME = sgm_small_tiyanki
		while = {
			count = modifier_var
			create_tiyanki_country = yes
			event_target:tiyanki_garrison_country = {
				create_fleet = {
					name = "NAME_Tiyanki_Space_Whale"
					effect = {
						set_owner = event_target:tiyanki_garrison_country
						while = {
							count = 1
							create_ship = {
								design = "NAME_Tiyanki_Cow"
							}
						}
						while = {
							count = 0
							create_ship = {
								design = "NAME_Tiyanki_Bull"
							}
						}
						while = {
							count = 10
							create_ship = {
								design = "NAME_Tiyanki_Hatchling"
							}
						}
						while = {
							count = 0
							create_ship = {
								design = "NAME_Tiyanki_Calf"
							}
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = passive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 0
					}
				}
			}
		}
	}
	option = {
		# sgm_roamer_tiyanki
		NAME = sgm_small_tiyanki
		while = {
			count = modifier_var
			create_tiyanki_country = yes
			event_target:tiyanki_country = {
				create_fleet = {
					name = "NAME_Tiyanki_Space_Whale"
					effect = {
						set_owner = event_target:tiyanki_country
						create_ship = {
							design = "NAME_Tiyanki_Cow"
						}
						create_ship = {
							design = "NAME_Tiyanki_Bull"
						}
						create_ship = {
							design = "NAME_Tiyanki_Calf"
						}
						create_ship = {
							design = "NAME_Tiyanki_Calf"
						}
						create_ship = {
							design = "NAME_Tiyanki_Hatchling"
						}
						create_ship = {
							design = "NAME_Tiyanki_Hatchling"
						}
						set_location = event_target:giant
						set_fleet_stance = passive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 0
						queue_actions = {
							wait = {
								# Cooldown until they start moving
								duration = 320
								random = 80
							}
						}
					}
				}
			}
		}
	}
	option = {
		# sgm_matriarch_tiyanki
		NAME = sgm_matriarch_tiyanki
		while = {
			count = modifier_var
			create_tiyanki_country = yes
			event_target:tiyanki_garrison_country = {
				create_fleet = {
					name = "NAME_Elderly_Tiyanki"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = event_target:tiyanki_garrison_country
						create_ship = {
							name = "NAME_Elder"
							design = "NAME_Progenitor"
						}
						set_location = {
							target = from
							distance = 40
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
						set_aggro_range = 50
						#save_global_event_target_as = elderly_tiyanki_fleet
						#auto_move_to_planet = {
						#	target = event_target:new_location
						#	clear_auto_move_on_arrival = no		# distar.136 sets a new auto move target
						#}
					}
				}
			}
		}
	}
}

country_event = {
	# create archaeology site
	id = sgm_planets.53
	is_triggered_only = yes
	title = sgm_planets_53_title
	desc = sgm_planets_53_desc
	picture = GFX_evt_archaeological_dig
	immediate = {
	}
	option = {
		NAME = site_lost_moments
		custom_tooltip = site_lost_moments_intro
		allow = {
			has_ancrel = yes
			from = {
				NOT = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_lost_moments
		}
	}
	option = {
		NAME = site_lesser_messenger
		custom_tooltip = site_lesser_messenger_intro
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_lesser_messenger
		}
	}
	option = {
		NAME = omnirelic_site
		custom_tooltip = "ancrel.21.desc"
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = omnirelic_site
		}
	}
	option = {
		NAME = asteroid_vault_1
		custom_tooltip = asteroid_vault_1_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = asteroid_vault_1
		}
	}
	option = {
		NAME = it_was_aliens_site
		custom_tooltip = it_was_aliens_site_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = it_was_aliens_site
		}
	}
	option = {
		NAME = ancient_battle_site
		custom_tooltip = ancient_battle_site_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = ancient_battle_site
		}
	}
	option = {
		NAME = city_of_bones
		custom_tooltip = city_of_bones_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = city_of_bones
		}
	}
	option = {
		NAME = mutation_vats
		custom_tooltip = mutation_vats_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = mutation_vats
		}
	}
	option = {
		NAME = planetary_mechanocalibrator
		custom_tooltip = planetary_mechanocalibrator_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = planetary_mechanocalibrator
		}
	}
	option = {
		NAME = the_host
		custom_tooltip = the_host_desc
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = the_host
		}
	}
	option = {
		NAME = site_command_center
		custom_tooltip = site_command_center_intro
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_command_center
		}
	}
	option = {
		NAME = site_hunting_ground
		custom_tooltip = site_hunting_ground_intro
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_hunting_ground
		}
	}
	option = {
		NAME = site_zarqlan
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_zarqlan
		}
	}
	option = {
		NAME = site_minigalaxy_1
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_minigalaxy_1
		}
	}
	option = {
		NAME = site_minigalaxy_2
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_minigalaxy_2
		}
	}
	option = {
		NAME = site_star_petal
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_star_petal
		}
	}
	option = {
		NAME = site_robot_debris
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_robot_debris
		}
	}
	option = {
		NAME = site_freighter_crash
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_freighter_crash
		}
	}
	option = {
		NAME = site_hidden_lab_a
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_hidden_lab_a
		}
	}
	option = {
		NAME = site_moon_bump
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_moon_bump
		}
	}
	option = {
		NAME = site_echoes_inside
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_echoes_inside
		}
	}
	option = {
		NAME = Next
		country_event = {
			id = sgm_planets.54
			scopes = {
				from = from
			}
		}
	}
	option = {
		NAME = Exit
	}
}

country_event = {
	# archaeology sites #2
	id = sgm_planets.54
	is_triggered_only = yes
	title = sgm_planets_54_title
	desc = sgm_planets_54_desc
	picture = GFX_evt_archaeological_dig
	immediate = {
	}
	option = {
		NAME = site_target_from_orbit
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_target_from_orbit
		}
	}
	option = {
		NAME = site_shot_into_the_ground
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_shot_into_the_ground
		}
	}
	option = {
		NAME = site_cut_to_fit
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_cut_to_fit
		}
	}
	option = {
		NAME = site_deja_vu_dig
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_deja_vu_dig
		}
	}
	option = {
		NAME = site_trench_world
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_trench_world
		}
	}
	option = {
		NAME = site_ebb_and_flow
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_ebb_and_flow
		}
	}
	option = {
		NAME = site_sky_glow_hymn
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_sky_glow_hymn
		}
	}
	option = {
		NAME = site_warmer_climates
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_warmer_climates
		}
	}
	option = {
		NAME = site_phoenix_collective
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_phoenix_collective
		}
	}
	option = {
		NAME = site_grand_herald
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_grand_herald
		}
	}
	option = {
		NAME = site_hive_coral
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_hive_coral
		}
	}
	option = {
		NAME = site_orbital_rain
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_orbital_rain
		}
	}
	option = {
		NAME = site_fossilized_jellyfish
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_fossilized_jellyfish
		}
	}
	option = {
		NAME = site_popular_rock
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_popular_rock
		}
	}
	option = {
		NAME = site_strange_flows
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_strange_flows
		}
	}
	option = {
		NAME = site_ruins_of_shallash
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = site_ruins_of_shallash
		}
	}
	option = {
		NAME = relicrails_digsite
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = relicrails_digsite
		}
	}
	option = {
		NAME = lithoids_digsite
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = lithoids_digsite
		}
	}
	option = {
		NAME = rubricator_digsite
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = rubricator_digsite
		}
	}
	option = {
		NAME = oracle_digsite
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = oracle_digsite
		}
	}
	option = {
		NAME = endless_expanse_digsite
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = endless_expanse_digsite
		}
	}
	option = {
		NAME = endless_expanse_digsite_2
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = endless_expanse_digsite_2
		}
	}
	option = {
		NAME = sentinels_digsite
		allow = {
			has_ancrel = yes
			NOT = {
				from = {
					exists = archaeological_site
				}
			}
		}
		from = {
			create_archaeological_site = sentinels_digsite
		}
	}
	option = {
		NAME = Previous
		country_event = {
			id = sgm_planets.53
			scopes = {
				from = from
			}
		}
	}
	option = {
		NAME = Exit
	}
}

country_event = {
	# anomalies menu
	id = sgm_planets.55
	is_triggered_only = yes
	title = sgm_planets_55_title
	desc = sgm_planets_55_desc
	picture = GFX_evt_analyzing_artifacts
	immediate = {
	}
	# asteroid anomalies
	option = {
		# crashed_ship_asteroid_category
		NAME = crashed_ship_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = crashed_ship_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# origin_asteroid_category 
		NAME = origin_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = origin_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# debris_asteroid_category 
		NAME = debris_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = debris_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# emissions_asteroid_category 
		NAME = emissions_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = emissions_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# hatch_asteroid_category 
		NAME = hatch_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = hatch_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# collision_asteroid_category 
		NAME = collision_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				has_any_strategic_resource = no
			}
		}
		from = {
			add_anomaly = {
				category = collision_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# station_asteroid_category 
		NAME = station_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				num_minerals > 0
			}
		}
		from = {
			add_anomaly = {
				category = station_asteroid_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# life_asteroid_category 
		NAME = life_asteroid_category
		trigger = {
			from = {
				is_asteroid = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = life_asteroid_category
				target = event_target:target_country
			}
		}
	}
	# gas giant anomalies
	option = {
		# object_gasgiant_category 
		NAME = object_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = object_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# moon_gasgiant_category  
		NAME = moon_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				has_strategic_resource = no
			}
		}
		from = {
			add_anomaly = {
				category = moon_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# life_gasgiant_category  
		NAME = life_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = life_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# storms_gasgiant_category  
		NAME = storms_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = storms_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# aerostat_gasgiant_category  
		NAME = aerostat_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = aerostat_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# cargo_gasgiant_category  
		NAME = cargo_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = cargo_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# debris_gasgiant_category  
		NAME = debris_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = debris_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# signal_gasgiant_category   
		NAME = signal_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = signal_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# ship_gasgiant_category   
		NAME = ship_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = ship_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# terminal_gasgiant_category   
		NAME = terminal_gasgiant_category
		trigger = {
			from = {
				is_planet_class = pc_gas_giant
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				is_moon = no
			}
		}
		from = {
			add_anomaly = {
				category = terminal_gasgiant_category
				target = event_target:target_country
			}
		}
	}
	# uninhabitable planet anomalies
	option = {
		# impact_uninhabitable_category   
		NAME = impact_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = impact_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# energy_uninhabitable_category    
		NAME = energy_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = energy_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# signal_uninhabitable_category    
		NAME = signal_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = signal_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# asteroid_uninhabitable_category    
		NAME = asteroid_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = asteroid_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# solar_uninhabitable_category    
		NAME = solar_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = solar_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# life_toxic_category    
		NAME = life_toxic_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = life_toxic_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# life_frozen_category    
		NAME = life_frozen_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = life_frozen_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# life_barren_category    
		NAME = life_barren_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = life_barren_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# battle_uninhabitable_category    
		NAME = battle_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = battle_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# shipyard_uninhabitable_category    
		NAME = shipyard_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = shipyard_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# inhabited_toxic_category    
		NAME = inhabited_toxic_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				is_planet_class = pc_toxic
			}
		}
		from = {
			add_anomaly = {
				category = inhabited_toxic_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# writing_uninhabitable_category    
		NAME = writing_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = writing_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# beacon_uninhabitable_category    
		NAME = beacon_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				has_any_strategic_resource = no
			}
		}
		from = {
			add_anomaly = {
				category = beacon_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# mountain_uninhabitable_category    
		NAME = mountain_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = mountain_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# object_uninhabitable_category    
		NAME = object_uninhabitable_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
		}
		from = {
			add_anomaly = {
				category = object_uninhabitable_category
				target = event_target:target_country
			}
		}
	}
	# terraforming candidate anomalies
	option = {
		# terraforming_candidate_category     
		NAME = terraforming_candidate_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				NOT = {
					has_modifier = terraforming_candidate
				}
				OR = {
					is_planet_class = pc_barren
					is_planet_class = pc_barren_cold
				}
				planet_size > 9
				planet_size < 26
				solar_system = {
					NOR = {
						is_star_class = sc_black_hole
						is_star_class = sc_neutron_star
						is_star_class = sc_pulsar
					}
				}
			}
		}
		from = {
			add_anomaly = {
				category = terraforming_candidate_category
				target = event_target:target_country
			}
		}
	}
	option = {
		# living_metal_category     
		NAME = living_metal_category
		trigger = {
			from = {
				uninhabitable_regular_planet = yes
			}
		}
		allow = {
			exists = event_target:target_country
			from = {
				OR = {
					is_planet_class = pc_barren
					is_planet_class = pc_barren_cold
					is_asteroid = yes
				}
				has_any_strategic_resource = no
				NOT = {
					has_deposit_for = shipclass_mining_station
					has_deposit_for = shipclass_research_station
				}
			}
		}
		from = {
			add_anomaly = {
				category = living_metal_category
				target = event_target:target_country
			}
		}
	}
	option = {
		NAME = Exit
	}
}

country_event = {
	# spawn armies menu
	id = sgm_planets.56
	is_triggered_only = yes
	title = sgm_planets_56
	desc = sgm_planets_56_desc
	#picture = GFX_evt_alien_city
	custom_gui = sgm_ScalarEventWindow
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:target_country.owner_main_species
		room = enclave_curator_room
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = creating_army_flag
					has_global_flag = creating_army_transport_flag
				}
			}
			set_global_flag = creating_army_flag
		}
	}
	option = {
		NAME = creating_army
		trigger = {
			has_global_flag = creating_army_flag
		}
		set_global_flag = creating_army_transport_flag
		remove_global_flag = creating_army_flag
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		NAME = creating_army_transport
		trigger = {
			has_global_flag = creating_army_transport_flag
		}
		set_global_flag = creating_army_flag
		remove_global_flag = creating_army_transport_flag
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		NAME = spawn_armies
		from = {
			sgm_spawn_army_type_check = yes
		}
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = assault_army
			}
		}
		NAME = assault_army
		remove_army_flags = yes
		set_global_flag = assault_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = slave_army
			}
		}
		NAME = slave_army
		remove_army_flags = yes
		set_global_flag = slave_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = clone_army
			}
		}
		NAME = clone_army
		remove_army_flags = yes
		set_global_flag = clone_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = robotic_army
			}
		}
		NAME = robotic_army
		remove_army_flags = yes
		set_global_flag = robotic_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = psionic_army
			}
		}
		NAME = psionic_army
		remove_army_flags = yes
		set_global_flag = psionic_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = xenomorph_army
			}
		}
		NAME = xenomorph_army
		remove_army_flags = yes
		set_global_flag = xenomorph_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = gene_warrior_army
			}
		}
		NAME = gene_warrior_army
		remove_army_flags = yes
		set_global_flag = gene_warrior_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = rebel_army
			}
		}
		NAME = rebel_army
		remove_army_flags = yes
		set_global_flag = rebel_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = primitive_army
			}
		}
		NAME = primitive_army
		remove_army_flags = yes
		set_global_flag = primitive_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = industrial_army
			}
		}
		NAME = industrial_army
		remove_army_flags = yes
		set_global_flag = industrial_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = postatomic_army
			}
		}
		NAME = postatomic_army
		remove_army_flags = yes
		set_global_flag = postatomic_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = subterranean_industrial_army
			}
		}
		NAME = subterranean_industrial_army
		remove_army_flags = yes
		set_global_flag = subterranean_industrial_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = subterranean_postatomic_army
			}
		}
		NAME = subterranean_postatomic_army
		remove_army_flags = yes
		set_global_flag = subterranean_postatomic_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = mutant_army
			}
		}
		NAME = mutant_army
		remove_army_flags = yes
		set_global_flag = mutant_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = swarm_army
			}
		}
		NAME = swarm_army
		remove_army_flags = yes
		set_global_flag = swarm_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = tree_army
			}
		}
		NAME = tree_army
		remove_army_flags = yes
		set_global_flag = tree_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = enraged_army
			}
		}
		NAME = enraged_army
		remove_army_flags = yes
		set_global_flag = enraged_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = ketling_army
			}
		}
		NAME = ketling_army
		remove_army_flags = yes
		set_global_flag = ketling_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = titanic_assault_army
			}
		}
		NAME = titanic_assault_army
		remove_army_flags = yes
		set_global_flag = titanic_assault_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = titanic_azizian_assault_army
			}
		}
		NAME = titanic_azizian_assault_army
		remove_army_flags = yes
		set_global_flag = titanic_azizian_assault_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = shroud_army
			}
		}
		NAME = shroud_army
		remove_army_flags = yes
		set_global_flag = shroud_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = gray_army
			}
		}
		NAME = gray_army
		remove_army_flags = yes
		set_global_flag = gray_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = care_defensive_protocols
			}
		}
		NAME = care_defensive_protocols
		remove_army_flags = yes
		set_global_flag = care_defensive_protocols
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = sentinel_army
			}
		}
		NAME = sentinel_army
		remove_army_flags = yes
		set_global_flag = sentinel_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = cybrex_warform
			}
			has_ancrel = yes
		}
		NAME = cybrex_warform
		remove_army_flags = yes
		set_global_flag = cybrex_warform
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = machine_assault_1
			}
		}
		NAME = machine_assault_1
		remove_army_flags = yes
		set_global_flag = machine_assault_1
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = machine_assault_2
			}
		}
		NAME = machine_assault_2
		remove_army_flags = yes
		set_global_flag = machine_assault_2
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = machine_assault_3
			}
		}
		NAME = machine_assault_3
		remove_army_flags = yes
		set_global_flag = machine_assault_3
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = undead_army
			}
			host_has_dlc = "Necroids Species Pack"
		}
		NAME = undead_army
		remove_army_flags = yes
		set_global_flag = undead_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = giant_undead_army
			}
			host_has_dlc = "Necroids Species Pack"
		}
		NAME = giant_undead_army
		remove_army_flags = yes
		set_global_flag = giant_undead_army
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		allow = {
			NOT = {
				has_global_flag = imperial_legion
			}
			host_has_dlc = "Nemesis"
		}
		NAME = imperial_legion
		remove_army_flags = yes
		set_global_flag = imperial_legion
		country_event = {
			id = sgm_planets.56
			scopes = {
				from = from
				fromfrom = fromfrom
			}
		}
	}
	option = {
		NAME = Exit
	}
}

country_event = {
	id = sgm_planets.4199
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		from = {
			planet_event = {
				id = sgm_planets.4200
			}
		}
	}
}

# this is a modified version of unrest.4200, check to be sure it hasn't been updated
planet_event = {
	id = sgm_planets.4200
	title = unrest.4200.name
	is_triggered_only = yes
	desc = {
		trigger = {
			has_planet_flag = nationalist_revolt
			owner = {
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
		text = unrest.4200.desc.returner
	}
	desc = {
		trigger = {
			has_planet_flag = secessionist_revolt
			owner = {
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
		text = unrest.4200.desc.secession
	}
	desc = {
		trigger = {
			has_planet_flag = nationalist_revolt
			owner = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
		text = unrest.4200.desc.returner.gesta
	}
	desc = {
		trigger = {
			has_planet_flag = secessionist_revolt
			owner = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
		text = unrest.4200.desc.secession.gesta
	}
	picture = GFX_evt_surrender
	show_sound = event_ground_battle
	location = root
	#mean_time_to_happen = { months = 600 }
	pre_triggers = {
		has_ground_combat = no
	}
	trigger = {
		#planet_stability < @stabilitylevel1
		#check_variable = {
		#	which = unrest_50
		#	value > 36
		#}
		NOR = {
			has_planet_flag = recent_unrest_event
			has_planet_flag = slave_stirring
			has_planet_flag = slave_resistance
			has_planet_flag = slave_riots
			has_planet_flag = slave_revolt
		}
		has_orbital_bombardment = no
		#exists = controller
		#controller = { is_same_value = root.owner }
		#any_owned_species = {
		#	species_has_happiness_with_owner = root.owner
		#}
		#original_owner = no
		#any_country = {
		#	NOT = { is_same_value = root.owner }
		#	root = {
		#		is_original_owner = prev
		#		any_owned_pop = {
		#			is_same_species = prevprev
		#		}
		#	}
		#}
	}
	immediate = {
		set_planet_flag = revolt_in_progress
		set_variable = {
			which = unrest_50
			value = 0
		}
		set_variable = {
			which = rebel_armies_var
			value = 0
		}
		every_owned_pop = {
			planet = {
				change_variable = {
					which = rebel_armies_var
					value = 1
				}
			}
		}
		multiply_variable = {
			which = rebel_armies_var
			value = 0.67
		}
		if = {
			limit = {
				# has original owner
				original_owner = no
				any_country = {
					NOT = {
						is_same_value = root.owner
					}
					is_subject = no
					NOT = {
						has_ethic = ethic_gestalt_consciousness
					}
					root = {
						is_original_owner = prev
						any_owned_pop = {
							is_same_species = prevprev
						}
					}
				}
			}
			random_country = {
				limit = {
					NOT = {
						is_same_value = root.owner
					}
					is_subject = no
					NOT = {
						has_ethic = ethic_gestalt_consciousness
					}
					root = {
						is_original_owner = prev
						any_owned_pop = {
							is_same_species = prevprev
						}
					}
				}
				save_event_target_as = fatherland
			}
			random_owned_pop = {
				limit = {
					is_same_species = event_target:fatherland
				}
				save_event_target_as = nationalist_pop
			}
			create_rebels = {
				name = random
				ethos = event_target:fatherland
				authority = event_target:fatherland
				#civics = event_target:fatherland
				civics = random
				origin = "origin_separatists"
				species = event_target:fatherland
				flag = random
				effect = {
					if = {
						limit = {
							has_trait = trait_necrophage
						}
						set_origin = origin_necrophage
					}
					set_country_flag = standard_unrest_rebels
					save_event_target_as = nationalist_rebels
					establish_communications_no_message = root.owner
					establish_communications_no_message = event_target:fatherland
					root = {
						owner = {
							every_relation = {
								establish_communications_no_message = prevprevprev
							}
						}
					}
				}
			}
			while = {
				count = rebel_armies_var
				create_army = {
					owner = event_target:nationalist_rebels
					species = event_target:fatherland
					type = "assault_army"
				}
			}
			set_planet_flag = nationalist_revolt
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = 720
			}
		}
		else = {
			# no original owner
			random_owned_pop = {
				limit = {
					is_sapient = yes
					pop_has_happiness = yes
				}
				save_event_target_as = rebel_pop
			}
			if = {
				limit = {
					NOT = {
						exists = event_target:rebel_pop
					}
				}
				random_owned_pop = {
					limit = {
						is_sapient = yes
					}
					save_event_target_as = rebel_pop
				}
			}
			if = {
				limit = {
					NOT = {
						exists = event_target:rebel_pop
					}
				}
				random_owned_pop = {
					save_event_target_as = rebel_pop
				}
			}
			create_rebels = {
				species = event_target:rebel_pop.species
				ethos = random
				authority = random
				origin = "origin_separatists"
				name = random
				flag = random
				effect = {
					if = {
						limit = {
							has_trait = trait_necrophage
						}
						set_origin = origin_necrophage
					}
					set_country_flag = standard_unrest_rebels
					save_event_target_as = secessionist_rebels
					establish_communications_no_message = root.owner
					root = {
						owner = {
							every_relation = {
								establish_communications_no_message = prevprevprev
							}
						}
					}
				}
			}
			while = {
				count = rebel_armies_var
				create_army = {
					owner = event_target:secessionist_rebels
					species = event_target:secessionist_rebels
					type = "assault_army"
				}
			}
			set_planet_flag = secessionist_revolt
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = 720
			}
		}
		clear_variable = rebel_armies_var
	}
	option = {
		name = UNFORTUNATE
	}
}

country_event = {
	id = sgm_planets.57
	is_triggered_only = yes
	title = sgm_planets_57
	desc = sgm_planets_57_desc
	picture = GFX_evt_alien_city
	immediate = {
		if = {
			limit = {
				NOT = {
					exists = event_target:sgm_spawn_megastructure_target_planet
				}
			}
			from = {
				solar_system = {
					random_system_planet = {
						limit = {
							is_primary_star = yes
						}
						save_event_target_as = sgm_spawn_megastructure_target_planet
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = dyson_sphere_0
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = dyson_sphere_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = sgm_dyson_sphere_permanently_ruined
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = dyson_sphere_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = dyson_sphere_ruined
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = dyson_sphere_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = spy_orb_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = spy_orb_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = spy_orb_permanently_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = spy_orb_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = spy_orb_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = spy_orb_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = think_tank_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = think_tank_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = sgm_think_tank_permanently_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = think_tank_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = think_tank_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = think_tank_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		NAME = gateway_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = gateway_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		NAME = gateway_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = gateway_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Megacorp"
		}
		NAME = matter_decompressor_0
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = matter_decompressor_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Megacorp"
		}
		NAME = sgm_matter_decompressor_permanently_ruined
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = matter_decompressor_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Megacorp"
		}
		NAME = matter_decompressor_ruined
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = matter_decompressor_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = sgm_strategic_coordination_center_permanently_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = strategic_coordination_center_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = strategic_coordination_center_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = strategic_coordination_center_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Federations"
		}
		NAME = mega_art_installation_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = mega_art_installation_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Federations"
		}
		NAME = sgm_mega_art_installation_permanently_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = mega_art_installation_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Federations"
		}
		NAME = mega_art_installation_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = mega_art_installation_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Megacorp"
		}
		NAME = interstellar_assembly_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = interstellar_assembly_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Megacorp"
		}
		NAME = sgm_interstellar_assembly_permanently_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = interstellar_assembly_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Megacorp"
		}
		NAME = interstellar_assembly_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = interstellar_assembly_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Federations"
		}
		NAME = mega_shipyard_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = mega_shipyard_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Federations"
		}
		NAME = sgm_mega_shipyard_permanently_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = mega_shipyard_permanently_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Federations"
		}
		NAME = mega_shipyard_ruined
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = mega_shipyard_ruined
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Utopia"
		}
		NAME = habitat_0
		from = {
			save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				if = {
					limit = {
						exists = owner
					}
					spawn_megastructure = {
						type = habitat_0
						planet = event_target:sgm_spawn_megastructure_target_planet
						graphical_culture = space_owner
					}
				}
				else = {
					spawn_megastructure = {
						type = habitat_0
						planet = event_target:sgm_spawn_megastructure_target_planet
						graphical_culture = mammalian_01
					}
				}
			}
		}
	}
	option = {
		allow = {
			host_has_dlc = "Nemesis"
		}
		NAME = crisis_sphere_0
		from = {
			# save_event_target_as = sgm_spawn_megastructure_target_planet
			solar_system = {
				spawn_megastructure = {
					type = crisis_sphere_0
					planet = event_target:sgm_spawn_megastructure_target_planet
					graphical_culture = mammalian_01
					init_effect = {
						if = {
							limit = {
								NOT = {
									exists = owner
								}
								solar_system = {
									exists = owner
								}
							}
							set_owner = solar_system.owner
						}
					}
				}
			}
		}
	}
}

country_event = {							# called from target_planet button effect
	id = sgm_planets.58
	is_triggered_only = yes
	#hide_window = yes
	location = fromfrom
	title = go_to_planet
	desc = go_to_planet_desc
	picture = GFX_evt_ruined_system
	
	immediate = {}
	option = {
		NAME = Ok
	}
}
